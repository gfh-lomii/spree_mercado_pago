<div id="paymentBrick_container"></div>

<script src="https://sdk.mercadopago.com/js/v2"></script>

<script>
    const mp = new MercadoPago("TEST-3637eba7-aab8-4ba3-b65b-deb47d96dd45");
    const bricksBuilder = mp.bricks();
    const renderPaymentBrick = async (bricksBuilder) => {
      const settings = {
        initialization: {
          amount: 100, // monto a ser pago
          payer: {
            customerId: '209277402-FqRqgEc3XItrxs',
            cardsIds: [ '1518023392627', '1518023332143' ]
          },
        },
        customization: {
          paymentMethods: {
            creditCard: 'all',
            debitCard: 'all',
          }
        },
        callbacks: {
          onReady: () => {
            /*
              Callback llamado cuando Brick está listo
              Aquí puedes ocultar loadings de su sitio, por ejemplo.
            */
          },
          onSubmit: ({ selectedPaymentMethod, formData }) => {
            // callback llamado cuando el usuario haz clic en el botón enviar los datos
              return new Promise((resolve, reject) => {
                fetch("/processar-pago", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify(formData)
                })
                  .then((response) => {
                    // recibir el resultado del pago
                    resolve();
                  })
                  .catch((error) => {
                    // tratar respuesta de error al intentar crear el pago
                    reject();
                  })
              });
          },
          onError: (error) => {
            // callback llamado para todos los casos de error de Brick
            console.error(error);
          },
        },
      };
      window.paymentBrickController = await bricksBuilder.create('payment', 'paymentBrick_container', settings);
    };
    renderPaymentBrick(bricksBuilder);
</script>
