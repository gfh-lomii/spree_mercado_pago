module SpreeMercadoPago::Spree
  module Api
    module V2
      module Storefront
        module CheckoutControllerDecorator
          def self.prepended(base)
            base.before_action :mercadopago_checkout, only: %i[update]
          end

          def mercadopago_checkout
            puts ">>>>> pay_with_mercadopago on API update"
            spree_authorize! :update, spree_current_order, order_token

            result = update_service.call(
              order: spree_current_order,
              params: params,
              # defined in https://github.com/spree/spree/blob/master/core/lib/spree/core/controller_helpers/strong_parameters.rb#L19
              permitted_attributes: permitted_checkout_attributes,
              request_env: request.headers.env
            )

            if spree_current_order.state == 'payment'
              pm_id = params["order[payments_attributes][][payment_method_id]"] || params[:method]
              payment_method = Spree::PaymentMethod.find(pm_id)
              if payment_method && payment_method.kind_of?(Spree::PaymentMethod::MercadoPago)
                # pay with mercadopago
                payment_response = MercadoPagoCheckout.call(spree_current_order.id, params[:mercadopago])
                if payment_response.dig(:status) == "approved"
                  spree_current_order.skip_stock_validation = true
                  ix = 0
                  while !spree_current_order.completed? && ix < 5
                    spree_current_order.next!
                    ix += 1
                  end

                  render json: { return_url: "/orders/#{spree_current_order.number}" }, status: :ok and return
                else
                  puts ">>>>> payment message: #{payment_response.dig(:message)}"
                  render_error_payload({ message: payment_response.dig(:message) })
                end
              end
            end
          end
        end
      end
    end
  end
end

Spree::Api::V2::Storefront::CheckoutController.prepend SpreeMercadoPago::Spree::Api::V2::Storefront::CheckoutControllerDecorator if Spree::Api::V2::Storefront::CheckoutController.included_modules.exclude?(SpreeMercadoPago::Spree::Api::V2::Storefront::CheckoutControllerDecorator)
